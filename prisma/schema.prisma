// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// If you want to use Prisma Migrate, you will need to manually create a shadow database
// https://neon.tech/docs/guides/prisma-migrate#configure-a-shadow-database-for-prisma-migrate
// make sure to append ?connect_timeout=10 to the connection string
datasource db {
  provider = "postgresql"
  url  	= env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  // shadowDatabaseUrl = env(“SHADOW_DATABASE_URL”)
}

model User {
  id              String    @id @default(cuid())
  name            String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  hashedPassword  String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  accounts        Account[]
  
  userProfile     UserProfile?  // Required only for setting page for tutorial
}

model Account {
  id                String    @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// Required only for setting page for form tutorial
model UserProfile {
  id                String   @id @default(cuid())
  bio               String?
  gender            String?  // You can use an enum for gender (Male, Female)
  birthDate         DateTime?
  privateProfile    Boolean?  // You can use an enum for profile visibility (Public, Private)
  emailMarketing    Boolean?

  email             String @unique
  user              User   @relation(fields: [email], references: [email])
}